"""create_initial_tables

Revision ID: f3022018d67b
Revises:
Create Date: 2025-08-05 14:34:10.181351

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f3022018d67b"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activities",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent_id"],
            ["activities.id"],
            name=op.f("fk_activities_parent_id_activities"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_activities")),
    )
    op.create_index(op.f("ix_activities_name"), "activities", ["name"], unique=False)
    op.create_table(
        "buildings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_buildings")),
    )
    op.create_index(
        op.f("ix_buildings_latitude"), "buildings", ["latitude"], unique=False
    )
    op.create_index(
        op.f("ix_buildings_longitude"),
        "buildings",
        ["longitude"],
        unique=False,
    )
    op.create_table(
        "organizations",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("phones", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("building_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["building_id"],
            ["buildings.id"],
            name=op.f("fk_organizations_building_id_buildings"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_organizations")),
    )
    op.create_index(
        op.f("ix_organizations_name"), "organizations", ["name"], unique=False
    )
    op.create_table(
        "organization_activity_rel",
        sa.Column("organization_id", sa.Integer(), nullable=False),
        sa.Column("activity_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["activity_id"],
            ["activities.id"],
            name=op.f("fk_organization_activity_rel_activity_id_activities"),
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["organizations.id"],
            name=op.f("fk_organization_activity_rel_organization_id_organizations"),
        ),
        sa.PrimaryKeyConstraint(
            "organization_id",
            "activity_id",
            name=op.f("pk_organization_activity_rel"),
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("organization_activity_rel")
    op.drop_index(op.f("ix_organizations_name"), table_name="organizations")
    op.drop_table("organizations")
    op.drop_index(op.f("ix_buildings_longitude"), table_name="buildings")
    op.drop_index(op.f("ix_buildings_latitude"), table_name="buildings")
    op.drop_table("buildings")
    op.drop_index(op.f("ix_activities_name"), table_name="activities")
    op.drop_table("activities")
    # ### end Alembic commands ###
